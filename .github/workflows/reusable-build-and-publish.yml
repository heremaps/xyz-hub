on:
  workflow_call:


env:
  MIN_COVERAGE_OVERALL: 0
  MIN_COVERAGE_CHANGED_FILES: 0
  SERVICE_JAR_DIR: ${{ github.workspace }}/build/libs
  ARTIFACT_DIR: ${{ github.workspace }}/artifact
  GITHUB_ARTIFACT_NAME: artifact
  NAKSHA_LOCAL_TEST_CONTEXT: LOCAL_STANDALONE
  # TODO - Disabling tests that are too big to succeed for Github free pipeline capacity
  DISABLE_BIG_PAYLOAD_TESTS: true

jobs:
  main:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:16-master
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - run: echo "[${{ github.triggering_actor }}] triggered [${{ github.event_name }}] event on ${{ github.ref_type }}/PR# [${{ github.ref_name }}]"
      - run: echo "🎉 This job is running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: 'jdk'
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.13
      ### Build, Test, Coverage Verification
      - name: Build fat jar, Run Unit tests, Verify code coverage
        run: gradle shadowJar jacocoTestReport testCodeCoverageReport jacocoTestCoverageVerification
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Publish code coverage report as PR comment
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: '**/build/reports/jacoco/test/jacocoTestReport.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: $MIN_COVERAGE_OVERALL
          min-coverage-changed-files: $MIN_COVERAGE_CHANGED_FILES
          title: Code Coverage
      - name: Fail when coverage of changed files is too low
        run: |
          CHANGED_FILES_FAILED=$(echo '${{ steps.jacoco.outputs.coverage-changed-files }} < ${{ env.MIN_COVERAGE_CHANGED_FILES }}' | bc)
          [[ $CHANGED_FILES_FAILED -ne 0 ]] && echo 'Changed files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}% is smaller than required ${{ env.MIN_COVERAGE_CHANGED_FILES }}%'
          [[ $CHANGED_FILES_FAILED -ne 0 ]] && exit 1 || exit 0
      - name: List generated artifacts
        run: |
          ls -l $SERVICE_JAR_DIR/*
      ### Upload as pipeline artifact
      - name: Prepare artifact content
        run: |
          mkdir $ARTIFACT_DIR
          cp -p $SERVICE_JAR_DIR/naksha-*-all.jar $ARTIFACT_DIR/
      - name: List artifact content
        run: |
          ls -lR $ARTIFACT_DIR
      - name: Save artifact content
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GITHUB_ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_DIR }}
          if-no-files-found: error
      - run: echo "🍏 This job's status is ${{ job.status }}."
