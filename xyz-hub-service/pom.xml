<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2017-2020 HERE Europe B.V.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  ~ License-Filename: LICENSE
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.here.xyz</groupId>
    <artifactId>xyz-hub</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>1.10.14-SNAPSHOT</version>
  </parent>

  <licenses>
    <license>
      <comments>SPDX-License-Identifier: Apache-2.0</comments>
      <distribution>repo</distribution>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <name>XYZ Hub Service</name>
  <description>XYZ Hub Service</description>
  <artifactId>xyz-hub-service</artifactId>
  <packaging>jar</packaging>

  <properties>
    <startHub>false</startHub>
    <pathToConfig>deployment/local/config.json</pathToConfig>
    <dockerComposeFile>docker-compose.yml</dockerComposeFile>
  </properties>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/build.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/build.properties</exclude>
        </excludes>
      </resource>
    </resources>
  </build>

  <pluginRepositories>
    <pluginRepository>
      <id>cme-content-tools-virtual</id>
      <name>HERE Artifactory - Content Tools Virtual</name>
      <snapshots>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <url>https://artifactory.in.here.com/artifactory/cme-content-tools-virtual</url>
    </pluginRepository>
  </pluginRepositories>
  <profiles>
    <profile>
      <activation>
        <property>
          <name>skipShade</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-shade-plugin</artifactId>
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>**/Log4j2Plugins.dat</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>org.apache.logging.log4j:log4j-jcl</artifact>
                  <includes>
                    <include>**</include>
                  </includes>
                </filter>
                <filter>
                  <artifact>commons-logging:commons-logging</artifact>
                  <includes>
                    <include>**</include>
                  </includes>
                </filter>
              </filters>
              <finalName>xyz-hub-service</finalName>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.here.xyz.hub.Service</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>shade</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
        </plugins>
      </build>
      <id>shade</id>
    </profile>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <configuration>
                  <arguments>
                    <argument>--file</argument>
                    <argument>../${dockerComposeFile}</argument>
                    <argument>up</argument>
                    <argument>--detach</argument>
                    <argument>--build</argument>
                    <argument>--force-recreate</argument>
                  </arguments>
                  <executable>docker-compose</executable>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
                <id>build-and-start-docker-runtime</id>
                <phase>install</phase>
              </execution>
            </executions>
            <groupId>org.codehaus.mojo</groupId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xyz-models</artifactId>
    </dependency>

    <!-- Embedded xyz lambdas -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xyz-psql-connector</artifactId>
    </dependency>
    <!-- Logging libraries -->
    <dependency>
      <artifactId>log4j-slf4j-impl</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
    </dependency>
    <dependency>
      <artifactId>log4j-core</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
    </dependency>
    <dependency>
      <artifactId>disruptor</artifactId>
      <groupId>com.lmax</groupId>
    </dependency>


    <!-- Vert.x -->
    <dependency>
      <artifactId>vertx-core</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-web</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-web-api-contract</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-config</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-web-templ-handlebars</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-web-client</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-auth-jwt</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-redis-client</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>
    <dependency>
      <artifactId>vertx-jdbc-client</artifactId>
      <groupId>io.vertx</groupId>
    </dependency>

    <!-- Netty native transport -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-kqueue</artifactId>
      <classifier>osx-x86_64</classifier>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
      <classifier>linux-x86_64</classifier>
    </dependency>

    <!-- AWS SDK -->
    <dependency>
      <artifactId>aws-java-sdk-s3</artifactId>
      <groupId>com.amazonaws</groupId>
    </dependency>
    <dependency>
      <artifactId>aws-java-sdk-lambda</artifactId>
      <groupId>com.amazonaws</groupId>
    </dependency>
    <dependency>
      <artifactId>aws-java-sdk-sts</artifactId>
      <groupId>com.amazonaws</groupId>
    </dependency>
    <dependency>
      <artifactId>aws-java-sdk-dynamodb</artifactId>
      <groupId>com.amazonaws</groupId>
    </dependency>
    <dependency>
      <artifactId>aws-java-sdk-sns</artifactId>
      <groupId>com.amazonaws</groupId>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-cloudwatch</artifactId>
    </dependency>

    <!--  GeoTools libraries -->
    <dependency>
      <artifactId>gt-api</artifactId>
      <groupId>org.geotools</groupId>
    </dependency>
    <dependency>
      <artifactId>gt-referencing</artifactId>
      <groupId>org.geotools</groupId>
    </dependency>
    <dependency>
      <artifactId>gt-epsg-hsql</artifactId>
      <groupId>org.geotools</groupId>
    </dependency>
    <dependency>
      <artifactId>gt-epsg-extension</artifactId>
      <groupId>org.geotools</groupId>
    </dependency>

    <!-- Cache -->
    <dependency>
      <artifactId>expiringmap</artifactId>
      <groupId>net.jodah</groupId>
    </dependency>
    <dependency>
      <groupId>org.caffinitas.ohc</groupId>
      <artifactId>ohc-core</artifactId>
    </dependency>

    <!-- External libraries -->
    <dependency>
      <artifactId>mapbox-vector-tile</artifactId>
      <groupId>com.wdtinc</groupId>
      <version>2.0.0</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <artifactId>junit</artifactId>
      <groupId>junit</groupId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
